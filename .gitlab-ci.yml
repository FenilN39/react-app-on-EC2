stages:
  - docker-build
  - deploy

# build:
#   stage: build
#   image: node
#   script: 
#     - echo "Start building App"
#     - npm install
#     - npm run build
#     - echo "Build successfully!"
#   artifacts:
#     expire_in: 1 hour
#     paths:
#       - build
#       - node_modules/

docker-build:
  stage: docker-build
  image: docker:19.03.12
  services:
    - docker:dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD |docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
    - echo "Registry image:" $CI_REGISTRY_IMAGE

deploy:
  stage: deploy
  image: linuxserver/openssh-server
  before_script:
    - echo "deploying app"
  script:
    - chmod 400 $LOGIN_KEY
    - ssh -o StrictHostKeyChecking=no -i $LOGIN_FILE ubuntu@$SERVER_IP "echo $CI_REGISTRY_PASSWORD |docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin" 
    - ssh -o StrictHostKeyChecking=no -i $LOGIN_FILE ubuntu@$SERVER_IP "sudo docker pull registry.gitlab.com/feniln39/dockercicd:latest"
    - ssh -o StrictHostKeyChecking=no -i $LOGIN_FILE ubuntu@$SERVER_IP "sudo docker stop newcontainer || true && docker rm newcontainer || true" 
    - ssh -o StrictHostKeyChecking=no -i $LOGIN_FILE ubuntu@$SERVER_IP "sudo docker run -p 80:80 -d --name newcontainer registry.gitlab.com/feniln39/dockercicd:latest"
  






















